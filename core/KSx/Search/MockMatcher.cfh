parcel KinoSearch cnick Kino;

class KSx::Search::MockMatcher inherits KinoSearch::Search::Matcher {

    size_t    size;
    I32Array *doc_ids;
    ByteBuf  *scores;
    int32_t   tick;

    inert incremented MockMatcher*
    new(I32Array *doc_ids, ByteBuf *scores = NULL);

    /**
     * @param doc_ids An array of matching doc ids.
     * @param scores Float scores corresponding to the doc ids array.  If not
     * supplied, calling Score() will throw an exception.
     */
    inert incremented MockMatcher*
    init(MockMatcher *self, I32Array *doc_ids, ByteBuf *scores = NULL);

    public void
    Destroy(MockMatcher *self);

    public int32_t
    Next(MockMatcher* self);

    public float
    Score(MockMatcher* self);

    public int32_t 
    Get_Doc_ID(MockMatcher* self);
}

/* Copyright 2005-2010 Marvin Humphrey
 *
 * This program is free software; you can redistribute it and/or modify
 * under the same terms as Perl itself.
 */


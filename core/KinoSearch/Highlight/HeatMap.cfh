parcel KinoSearch cnick Kino;

/** Density of relevant data in a string.
 *
 * A HeatMap stores a number for each location in a string, indicating the
 * "heat" (density) of relevant data in areas which match a search query.
 */

class KinoSearch::Highlight::HeatMap inherits KinoSearch::Object::Obj {

    VArray   *spans;
    uint32_t  window;

    inert incremented HeatMap*
    new(VArray *spans, uint32_t window = 133);

    /**
     * @param spans An array of Spans, which need not be sorted and will not
     * be modified.
     * @param window The greatest distance between which heat points may
     * reinforce each other.
     */
    public inert HeatMap*
    init(HeatMap *self, VArray *spans, uint32_t window = 133);

    /** Reduce/slice overlapping spans.  Say we have two spans:
     *
     *   Span 1: positions 11-20, score .3
     *   Span 2: positions 16-30, score .5
     *
     * After merging, there will be three.
     * 
     *   Span 1: positions 11-16, score .3
     *   Span 2: positions 16-20, score .8
     *   Span 3: positions 20-30, score .5
     *
     * @param spans An array of Spans, which must be sorted by offset then
     * length.
     */
    incremented VArray*
    Flatten_Spans(HeatMap *self, VArray *spans);

    /** If the two spans overlap or abut, return a bonus equal to their summed
     * scores; as they move further apart, tail the bonus down until it hits 0
     * at the edge of the <code>window</code>.
     */
    float
    Calc_Proximity_Boost(HeatMap *self, Span *span1, Span *span2);

    /** Iterate through a sorted array of spans, generating a new span for
     * each pair that yields a non-zero proximity boost.
     *
     * @param spans An array of Spans, which must be sorted by offset then
     * length.
     */
    incremented VArray*
    Generate_Proximity_Boosts(HeatMap *self, VArray *spans);

    VArray*
    Get_Spans(HeatMap *self);

    public void
    Destroy(HeatMap *self);
}

/* Copyright 2008-2010 Marvin Humphrey
 *
 * This program is free software; you can redistribute it and/or modify
 * under the same terms as Perl itself.
 */


parcel KinoSearch cnick Kino;

/** Policies governing index updating, locking, and file deletion. 
 * 
 * IndexManager is an advanced-usage class for controlling index locking,
 * updating, merging, and deletion behaviors.
 *
 * IndexManager and Architecture are companion classes: Architecture is used
 * to define traits and behaviors which cannot change for the life of an
 * index; IndexManager is used for defining rules which may change from
 * process to process.
 */
class KinoSearch::Index::IndexManager cnick IxManager 
    extends KinoSearch::Obj {

    Folder *folder;

    public static incremented IndexManager*
    new(Folder *folder);

    /**
     * @param folder A Folder.
     */
    public static IndexManager*
    init(IndexManager *self, Folder *folder);

    public incremented Segment*
    Make_New_Segment(IndexManager *self, Snapshot *snapshot);

    /** Return the name of a new snapshot file, which shall contain a base-36
     * "generation" embedded inside it greater than the generation of any
     * snapshot file currently in the index folder.
     */
    public incremented CharBuf*
    Make_Snapshot_Filename(IndexManager *self);

    /** Return an array of SegReaders representing either sparsely populated
     * segments, or all segments if 'all' is true.  Testing only. 
     */
    public incremented VArray*
    SegReaders_To_Merge(IndexManager *self, PolyReader *reader, bool_t all);

    void
    Destroy(IndexManager *self);
}

/* Copyright 2007-2009 Marvin Humphrey
 *
 * This program is free software; you can redistribute it and/or modify
 * under the same terms as Perl itself.
 */


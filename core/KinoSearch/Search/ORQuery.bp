parcel KinoSearch cnick Kino;

/** Union multiple result sets.
 *
 * ORQuery matches when any of its children match, so its result set is
 * the union of their result sets.  Matching documents recieve a summed
 * score from all matching child Queries.
 */

class KinoSearch::Search::ORQuery extends KinoSearch::Search::PolyQuery 
    : dumpable {

    inert incremented ORQuery*
    new(VArray *children = NULL);

    /**
     * @param children An array of child Queries.
     */
    public inert ORQuery*
    init(ORQuery *self, VArray *children = NULL);

    public incremented Compiler*
    Make_Compiler(ORQuery *self, Searchable *searchable, float boost);

    public incremented CharBuf*
    To_String(ORQuery *self);

    public bool_t
    Equals(ORQuery *self, Obj *other);
}

class KinoSearch::Search::ORCompiler 
    extends KinoSearch::Search::PolyCompiler {

    inert incremented ORCompiler*
    new(ORQuery *parent, Searchable *searchable, float boost);

    inert ORCompiler*
    init(ORCompiler *self, ORQuery *parent, Searchable *searchable, 
         float boost);

    public incremented Matcher*
    Make_Matcher(ORCompiler *self, SegReader *reader, bool_t need_score);
}

/* Copyright 2006-2009 Marvin Humphrey
 *
 * This program is free software; you can redistribute it and/or modify
 * under the same terms as Perl itself.
 */


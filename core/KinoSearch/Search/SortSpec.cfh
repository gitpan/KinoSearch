parcel KinoSearch cnick Kino;

/** Specify a custom sort order for search results.
 *
 * By default, searches return results in order of relevance; SortSpec allows
 * you to indicate an alternate order via an array of SortRules.
 * 
 * Fields you wish to sort against must be <code>sortable</code>.
 *
 * For a stable sort (important when paging through results), add a
 * sort-by-doc rule as the last SortRule.
 */

class KinoSearch::Search::SortSpec inherits KinoSearch::Object::Obj {

    VArray        *rules;

    public inert SortSpec*
    new(VArray *rules);

    /**
     * @param rules An array of SortRules.
     */
    public inert SortSpec*
    init(SortSpec *self, VArray *rules);

    public incremented SortSpec*
    Deserialize(SortSpec *self, InStream *instream);

    public void
    Serialize(SortSpec *self, OutStream *outstream);

    VArray*
    Get_Rules(SortSpec *self);

    public void
    Destroy(SortSpec *self);
}

/* Copyright 2007-2010 Marvin Humphrey
 *
 * This program is free software; you can redistribute it and/or modify
 * under the same terms as Perl itself.
 */


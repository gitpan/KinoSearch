parcel KinoSearch cnick Kino;

/** Testing framework.
 */
inert class KinoSearch::Test { }

class KinoSearch::Test::TestBatch inherits KinoSearch::Object::Obj {
    int64_t    test_num;
    int64_t    num_tests;
    int64_t    num_passed;
    int64_t    num_failed; 
    int64_t    num_skipped;

    inert incremented TestBatch*
    new(int64_t num_tests);

    inert TestBatch*
    init(TestBatch *self, int64_t num_tests);

    void
    Plan(TestBatch *self);

    inert bool_t
    test_true(void *vself, bool_t condition, const char *pattern, ...);

    inert bool_t 
    test_false(void *vself, bool_t condition, const char *pattern, ...);

    inert bool_t 
    test_int_equals(void *vself, long got, long expected, 
                    const char *pattern, ...);

    inert bool_t 
    test_float_equals(void *vself, double got, double expected,
                      const char *pattern, ...);

    inert bool_t
    test_string_equals(void *vself, const char *got, const char *expected,
                       const char *pattern, ...); 

    inert bool_t 
    pass(void *vself, const char *pattern, ...);

    inert bool_t 
    fail(void *vself, const char *pattern, ...);

    inert void
    skip(void *vself, const char *pattern, ...);

    bool_t 
    VTest_True(TestBatch *self, bool_t condition, const char *pattern, 
               va_list args);

    bool_t 
    VTest_False(TestBatch *self, bool_t condition, const char *pattern, 
                va_list args);

    bool_t 
    VTest_Int_Equals(TestBatch *self, long got, long expected, 
                     const char *pattern, va_list args);

    bool_t 
    VTest_Float_Equals(TestBatch *self, double got, double expected,
                       const char *pattern, va_list args);

    bool_t
    VTest_String_Equals(TestBatch *self, const char *got, const char *expected,
                       const char *pattern, va_list args); 

    bool_t 
    VPass(TestBatch *self, const char *pattern, va_list args);

    bool_t 
    VFail(TestBatch *self, const char *pattern, va_list args);

    void
    VSkip(TestBatch *self, const char *pattern, va_list args);
}

__C__
#ifdef KINO_USE_SHORT_NAMES
  #define TEST_TRUE                    kino_TestBatch_test_true
  #define TEST_FALSE                   kino_TestBatch_test_false
  #define TEST_INT_EQ                  kino_TestBatch_test_int_equals
  #define TEST_FLOAT_EQ                kino_TestBatch_test_float_equals
  #define TEST_STR_EQ                  kino_TestBatch_test_string_equals
  #define PASS                         kino_TestBatch_pass
  #define FAIL                         kino_TestBatch_fail
  #define SKIP                         kino_TestBatch_skip
#endif
__END_C__

/* Copyright 2005-2010 Marvin Humphrey
 *
 * This program is free software; you can redistribute it and/or modify
 * under the same terms as Perl itself.
 */



# Auto-generated file -- DO NOT EDIT!!!!!

=head1 NAME

KinoSearch::Search::RangeQuery - Match a range of values.

=head1 SYNOPSIS

    # Match all articles by "Foo" published since the year 2000.
    my $range_query = KinoSearch::Search::RangeQuery->new(
        field         => 'publication_date',
        lower_term    => '2000-01-01',
        include_lower => 1,
    );
    my $author_query = KinoSearch::Search::TermQuery->new(
        field => 'author_last_name',
        text  => 'Foo',
    );
    my $and_query = KinoSearch::Search::ANDQuery->new(
        children => [ $range_query, $author_query ],
    );
    my $hits = $searcher->hits( query => $and_query );
    ...



=head1 DESCRIPTION

Match a range of values.

RangeQuery matches documents where the value for a particular field falls
within a given range.

=head1 CONSTRUCTORS

=head2 new( I<[labeled params]> )

    my $range_query = KinoSearch::Search::RangeQuery->new(
        field         => 'product_number', # required
        lower_term    => '003',            # see below
        upper_term    => '060',            # see below
        include_lower => 0,                # default true
        include_upper => 0,                # default true
    );

Takes 5 parameters; C<< field >> is required, as 
is at least one of either C<< lower_term >> or 
C<< upper_term >>.

=over

=item *

B<field> - The name of a C<< sortable >> field.

=item *

B<lower_term> - Lower delimiter.  If not supplied, all values
less than C<< upper_term >> will pass.

=item *

B<upper_term> - Upper delimiter.  If not supplied, all values greater
than C<< lower_term >> will pass.

=item *

B<include_lower> - Indicates whether docs which match
C<< lower_term >> should be included in the results.

=item *

B<include_upper> - Indicates whether docs which match
C<< upper_term >> should be included in the results.

=back







=head1 INHERITANCE

KinoSearch::Search::RangeQuery isa L<KinoSearch::Search::Query> isa L<KinoSearch::Object::Obj>.


=head1 COPYRIGHT AND LICENSE

Copyright 2005-2010 Marvin Humphrey

This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.

=cut


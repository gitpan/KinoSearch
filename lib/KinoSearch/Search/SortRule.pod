
# Auto-generated file -- DO NOT EDIT!!!!!

=head1 NAME

KinoSearch::Search::SortRule - Element of a SortSpec.

=head1 SYNOPSIS

    my $sort_spec = KinoSearch::Search::SortSpec->new(
        rules => [
            KinoSearch::Search::SortRule->new( field => 'date' ),
            KinoSearch::Search::SortRule->new( type  => 'doc_id' ),
        ],
    );



=head1 DESCRIPTION

SortRules are the building blocks used to assemble SortSpecs; each SortRule
defines a single level of sorting.  For example, sorting first by
"category" then by score requires a SortSpec with two SortRule elements.

=head1 CONSTRUCTORS

=head2 new( I<[labeled params]> )

    my $by_title   = KinoSearch::Search::SortRule->new( field => 'title' );
    my $by_score   = KinoSearch::Search::SortRule->new( type  => 'score' );
    my $by_doc_id  = KinoSearch::Search::SortRule->new( type  => 'doc_id' );
    my $reverse_date = KinoSearch::Search::SortRule->new(
        field   => 'date',
        reverse => 1,
    );

=over

=item *

B<type> - Indicate whether to sort by score, field, etc.  (The
default is to sort by a field.)

=item *

B<field> - The name of a C<< sortable >> field.

=item *

B<reverse> - If true, reverse the order of the sort for this rule.

=back



=head1 METHODS

=head2 get_field()

Accessor for "field" member.

=head2 get_reverse()

Accessor for "reverse" member.





=head1 INHERITANCE

KinoSearch::Search::SortRule isa L<KinoSearch::Obj>.


=head1 COPYRIGHT

Copyright 2005-2009 Marvin Humphrey

=head1 LICENSE, DISCLAIMER, BUGS, etc.

See L<KinoSearch> version 0.30.

=cut


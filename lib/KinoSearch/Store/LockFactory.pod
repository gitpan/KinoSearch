
# Auto-generated file -- DO NOT EDIT!!!!!

=head1 NAME

KinoSearch::Store::LockFactory - Create Locks.

=head1 SYNOPSIS

    use Sys::Hostname qw( hostname );
    my $hostname = hostname() or die "Can't get unique hostname";
    my $folder = KinoSearch::Store::FSFolder->new( 
        path => '/path/to/index', 
    );
    my $lock_factory = KinoSearch::Store::LockFactory->new(
        folder => $folder,
        host   => $hostname,
    );
    my $write_lock = $lock_factory->make_lock(
        name     => 'write',
        timeout  => 5000,
        interval => 100,
    );



=head1 DESCRIPTION

LockFactory is used to spin off interprocess mutex locks used by various
index reading and writing components.  The default implementation uses
lockfiles, but LockFactory subclasses which are implemented using
alternatives such as flock() are possible.

=head1 CONSTRUCTORS

=head2 new( I<[labeled params]> )

    my $lock_factory = KinoSearch::Store::LockFactory->new(
        folder => $folder,      # required
        host   => $hostname,    # required
    );

=over

=item *

B<folder> - A L<KinoSearch::Store::Folder>.

=item *

B<host> - An identifier which should be unique per-machine.

=back





=head1 METHODS

=head2 make_lock( I<[labeled params]> )

Return a Lock object, which, once obtain() returns successfully,
maintains an exclusive lock on a resource.

=over

=item *

B<name> - A file-system-friendly id which identifies the
resource to be locked.

=item *

B<timeout> - Time in milliseconds to keep retrying before abandoning
the attempt to obtain() a lock.

=item *

B<interval> - Time in milliseconds between retries.

=back

=head2 make_shared_lock( I<[labeled params]> )

Return a Lock object for which shared() returns true, and which
maintains a non-exclusive lock on a resource once obtain() returns
success.

=over

=item *

B<name> - A file-system-friendly id which identifies the
resource to be locked.

=item *

B<timeout> - Time in milliseconds to keep retrying before abandoning
the attempt to obtain() a lock.

=item *

B<interval> - Time in milliseconds between retries.

=back



=head1 INHERITANCE

KinoSearch::Store::LockFactory isa L<KinoSearch::Object::Obj>.


=head1 COPYRIGHT AND LICENSE

Copyright 2005-2011 Marvin Humphrey

This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.

=cut

